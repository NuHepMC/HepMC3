stages:
  - test

LCG_95_cc7-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  stage: test
  before_script:
    - export LCGPLATFORM=x86_64-centos7-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/contrib/gcc/8.2.0/${LCGPLATFORM}/setup.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh 
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/zlib/1.2.11/${LCGPLATFORM}/zlib-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/ 
    #sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure 

LCG_95_ubuntu1804-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-ubuntu18
  stage: test
  before_script:
    - export LCGPLATFORM=x86_64-ubuntu1804-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - export CXX=/usr/bin/g++-8
    - export CC=/usr/bin/gcc-8
    - export FC=/usr/bin/gfortran-8
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/lib:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/   
#sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure 
    
debian-salsa:
  only:
    variables:
     - $CI_SERVER_HOST=="salsa.debian.org"
  image: debian:unstable
  stage: test
  before_script:
    - apt-get update 
    - apt-get install -y -qq cmake g++   apt-utils
    - apt-get install -y -qq gfortran  doxygen wget graphviz libz-dev
    - apt-get install -y -qq devscripts build-essential lintian dh-make
    - apt-get install -y -qq libpython-dev python
    - apt-get install -y -qq libpython3-dev python3
    - apt-get install -y -qq dh-python
  script:
    - export
    - rm .gitlab-ci.yml
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.0/HepMC3-3.2.0.tar.gz
    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/master/HepMC3-master.tar.gz
    - mv HepMC3-master.tar.gz  ../hepmc3_3.2.2.orig.tar.gz
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.0/HepMC3-3.2.0.tar.gz
#    - mv HepMC3-3.2.0.tar.gz  ../hepmc3_3.2.0.orig.tar.gz
    - debuild -us -uc



Fedora23-gcc-noroot-nopython:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:23
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
# We have ROOT5 here   
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=OFF -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=OFF -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora23-clang-noroot-nopython:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:23
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
# We have ROOT5 here
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=OFF -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=OFF -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora24-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:24
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora24-clang-noroot:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:24
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=OFF -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora25-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:25
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora25-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:25
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora26-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:26
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora26-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:26
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
#The older ROOT has suboptimal cmake config
    - sed -i 's@message(FATAL_ERROR \"The imported @message(STATUS \"The imported@g' /usr/share/root/cmake/ROOTConfig-targets.cmake
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 



Fedora27-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:27
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora27-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:27
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 

Fedora28-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:28
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora28-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:28
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 



Fedora29-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:29
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora29-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:29
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 





Fedora30-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:30
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora30-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:30
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 



Fedora31-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:31
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora31-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:31
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora32-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:32
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora32-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:32
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 


Fedora33-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/
  image: fedora:33
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON 
    - make -j $(nproc)
    - ctest --output-on-failure 



Fedora33-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /FedoraCI/ 
  image: fedora:33
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 





CentOS7-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /CentOSCI/
  image: centos:7
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install epel-release
    - yum -y install  cmake3    
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
    - yum -y install  python34 python34-devel
#documentation 
    - yum -y install  doxygen 
#examples 
    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake3 .. -DHEPMC3_PYTHON_VERSIONS=2,3.4,3.6  -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 



CentOS7-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /CentOSCI/ 
  image: centos:7
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum -y install epel-release
    - yum -y install  cmake3
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel
    - yum -y install  python34 python34-devel
#documentation 
    - yum -y install  doxygen 
#examples 
#    - yum -y install  gcc-gfortran
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz graphviz-devel pythia8 pythia8-devel  root 
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake3 ..  -DHEPMC3_PYTHON_VERSIONS=2,3.4,3.6  -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 














CentOS8-gcc:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /CentOSCI/
  image: centos:8
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum install -y https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm
    - dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled PowerTools  
    - dnf config-manager --set-enabled AppStream  
    - dnf config-manager --set-enabled epel-testing    
    - yum -y install  cmake make binutils sed gawk grep
    - yum -y install  gcc gcc-c++
#    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen --skip-broken
#examples 
    - yum -y install  gcc-gfortran
#The nastiest package ever
    - yum -y install libzstd  --enablerepo=epel --enablerepo=epel-testing  --enablerepo=elrepo --enablerepo=elrepo-testing
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz-devel pythia8 pythia8-devel  root
  script:
    - export
    - mkdir build
    - cd build
    - export CXX=g++
    - export CC=gcc
    - export FC=gfortran
#    - export CXX=clang++
#    - export CC=clang
#    - export FC=gfortran    
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 



CentOS8-clang:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch" && $CI_COMMIT_MESSAGE =~ /CentOSCI/ 
  image: centos:8
  stage: test
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
#essentials
    - yum install -y https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm
    - dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    - dnf -y install 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled PowerTools  
    - dnf config-manager --set-enabled AppStream  
    - dnf config-manager --set-enabled epel-testing  
    - yum -y install  cmake make binutils sed gawk grep
#    - yum -y install  gcc gcc-c++
    - yum -y install  clang
#python bindings
    - yum -y install  python3 python3-devel python2 python2-devel 
#documentation 
    - yum -y install  doxygen --skip-broken
#examples 
#    - yum -y install  gcc-gfortran
#The nastiest package ever
    - yum -y install libzstd  --enablerepo=epel --enablerepo=epel-testing  --enablerepo=elrepo --enablerepo=elrepo-testing
    - yum -y install  valgrind HepMC HepMC-devel zlib zlib-devel zlib-static  graphviz-devel pythia8 pythia8-devel  root
  script:
    - export
    - mkdir build
    - cd build
#    - export CXX=g++
#    - export CC=gcc
#    - export FC=gfortran
    - export CXX=clang++
    - export CC=clang
#    - export FC=gfortran
    - cmake .. -DHEPMC3_ENABLE_ROOTIO=ON -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_ENABLE_PYTHON=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DHEPMC3_BUILD_DOCS=ON
    - make -j $(nproc)
    - ctest --output-on-failure 









