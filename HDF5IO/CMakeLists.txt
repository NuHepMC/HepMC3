
if (MSVC)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/${CMAKE_INSTALL_LIBDIR})
else()
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/${CMAKE_INSTALL_LIBDIR})
endif()

add_library(HepMC3HDF5IO SHARED ${PROJECT_SOURCE_DIR}/HDF5IO/src/WriterHDF5.cc ${PROJECT_SOURCE_DIR}/HDF5IO/src/ReaderHDF5.cc ${PROJECT_SOURCE_DIR}/HDF5IO/src/IOHDF5.cc )
set_property(TARGET HepMC3HDF5IO PROPERTY POSITION_INDEPENDENT_CODE 1)

#target_link_libraries(HepMC3HDF5IO ROOT::Tree ROOT::RIO ROOT::Core HepMC3)
target_link_libraries(HepMC3HDF5IO HDF5::HDF5 HepMC3::HepMC3)

target_include_directories(HepMC3HDF5IO PUBLIC
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  ${ROOT_INCLUDE_DIRS})

set_target_properties(HepMC3HDF5IO PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/${CMAKE_INSTALL_LIBDIR}/$<0:>
  EXPORT_NAME HepMC3::HDF5IO)
if (MSVC)
  set_target_properties(HepMC3HDF5IO PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/outputs/${CMAKE_INSTALL_LIBDIR}/$<0:>)
endif()
set_target_properties(HepMC3HDF5IO PROPERTIES SOVERSION 3)
# installs
install(TARGETS HepMC3HDF5IO
  EXPORT HepMC3HDF5IOTargets
  DESTINATION ${HEPMC3_INSTALL_LIBDIR}
  COMPONENT HDF5IOlibs)
install(DIRECTORY ${PROJECT_BINARY_DIR}/outputs/${CMAKE_INSTALL_LIBDIR}/ DESTINATION  ${CMAKE_INSTALL_LIBDIR}  COMPONENT HDF5IOlibs  PATTERN "CMakeFiles" EXCLUDE   PATTERN "src" EXCLUDE  PATTERN "include" EXCLUDE)
install(DIRECTORY include/HepMC3 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT HDF5IOdevel)

# Alias for packages that include this as a sub-project but
# want to use the namespaced target names
add_library(HepMC3::HDF5IO ALIAS HepMC3HDF5IO)

set(CONFIG_INSTALL_DIR ${CMAKE_INSTALL_DATADIR}/HepMC3/cmake)
install(EXPORT HepMC3HDF5IOTargets
  DESTINATION ${CONFIG_INSTALL_DIR}
  COMPONENT HDF5IOdevel)
